/*
	Copyright (C) 2013 - 2014 CurlyMo

	This file is part of pilight.

	pilight is free software: you can redistribute it and/or modify it under the
	terms of the GNU General Public License as published by the Free Software
	Foundation, either version 3 of the License, or (at your option) any later
	version.

	pilight is distributed in the hope that it will be useful, but WITHOUT ANY
	WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
	A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with pilight. If not, see	<http://www.gnu.org/licenses/>
*/

#ifndef _PILIGHT_H_
#define _PILIGHT_H_

#include "json.h"
#include "devices.h"

/* Internals */

#cmakedefine WEBSERVER
<<<<<<< HEAD
#cmakedefine DEBUG
#cmakedefine UPDATE

/* Protocol support */

#cmakedefine PROTOCOL_ALECTO
<<<<<<< HEAD
#cmakedefine PROTOCOL_RPI_TEMP
#cmakedefine PROTOCOL_BRENNENSTUHL_SWITCH
#cmakedefine PROTOCOL_CLARUS
=======
#cmakedefine PROTOCOL_CLARUS
#cmakedefine PROTOCOL_COGEX_SWITCH
>>>>>>> origin/master
#cmakedefine PROTOCOL_COCO_SWITCH
#cmakedefine PROTOCOL_COGEX_SWITCH
#cmakedefine PROTOCOL_CONRAD_RSL_SWITCH
#cmakedefine PROTOCOL_CONRAD_RSL_CONTACT
#cmakedefine PROTOCOL_DS18B20
<<<<<<< HEAD
#cmakedefine PROTOCOL_DHT11
=======
>>>>>>> origin/master
#cmakedefine PROTOCOL_DHT22
#cmakedefine PROTOCOL_DIO_SWITCH
#cmakedefine PROTOCOL_GENERIC_DIMMER
#cmakedefine PROTOCOL_GENERIC_SWITCH
#cmakedefine PROTOCOL_GENERIC_WEATHER
#cmakedefine PROTOCOL_HOMEEASY_OLD
#cmakedefine PROTOCOL_IMPULS
#cmakedefine PROTOCOL_INTERTECHNO_SWITCH
#cmakedefine PROTOCOL_INTERTECHNO_OLD
#cmakedefine PROTOCOL_KAKU_DIMMER
#cmakedefine PROTOCOL_KAKU_SWITCH_OLD
#cmakedefine PROTOCOL_KAKU_SCREEN_OLD
#cmakedefine PROTOCOL_KAKU_SWITCH
#cmakedefine PROTOCOL_KAKU_SCREEN
#cmakedefine PROTOCOL_NEXA_SWITCH
#cmakedefine PROTOCOL_RAW
#cmakedefine PROTOCOL_RELAY
#cmakedefine PROTOCOL_REV
#cmakedefine PROTOCOL_ELRO_SWITCH
#cmakedefine PROTOCOL_SELECTREMOTE

/* Hardware support */

#cmakedefine HARDWARE_433_GPIO
#cmakedefine HARDWARE_433_MODULE
#cmakedefine HARDWARE_433_PILIGHT

#define VERSION					"2.1"

#ifdef HARDWARE_433_PILIGHT
	#define HW_MODE				"pilight"
#elif defined(HARDWARE_433_GPIO)
	#define HW_MODE				"gpio"
#elif defined(HARDWARE_433_MODULE)
	#define HW_MODE				"module"
#else
	#define HW_MODE				"none"
#endif

#ifdef HARDWARE_433_GPIO
	#define GPIO_IN_PIN			1
	#define GPIO_OUT_PIN		0

	#define POLL_TIMEOUT		1000
	#define RDBUF_LEN			5
	#define GPIO_FN_MAXLEN		32
#endif

#ifdef HARDWARE_433_MODULE
	#define DEFAULT_LIRC_SOCKET	"/dev/lirc0"
	#define FREQ433				433920
	#define FREQ38				38000
#endif

#ifdef HARDWARE_433_PILIGHT
	#define DEFAULT_PILIGHT_SOCKET	"/dev/pilight0"
#endif
=======
#cmakedefine EVENTS
#cmakedefine FIRMWARE_UPDATER
>>>>>>> upstream/development

#define VERSION									"5.0"
#define PULSE_DIV								34
#define EPSILON									0.00001

#ifdef WEBSERVER
	#define WEBSERVER_PORT				5001
	#define WEBSERVER_ROOT				"/usr/local/share/pilight/"
	#define WEBSERVER_ENABLE			1
	#define WEBSERVER_CACHE				1
	#define WEBGUI_TEMPLATE				"default"
	#define MAX_UPLOAD_FILESIZE 	5242880
	#define MAX_CACHE_FILESIZE 		1048576
	#define WEBSERVER_WORKERS			1
	#define WEBSERVER_CHUNK_SIZE 	4096
	#define WEBSERVER_USER 				"www-data"
	#define WEBGUI_WEBSOCKETS			1
#endif

#define MAX_CLIENTS							30
#define BUFFER_SIZE							1025
#define MEMBUFFER								128
#define EOSS										"\n\n" // End Of Socket Stream

#define PROTOCOL_ROOT						"/usr/local/lib/pilight/protocols/"
#define HARDWARE_ROOT						"/usr/local/lib/pilight/hardware/"
#define OPERATOR_ROOT						"/usr/local/lib/pilight/operators/"
#define ACTION_ROOT							"/usr/local/lib/pilight/actions/"

#define PID_FILE								"/var/run/pilight.pid"
#define CONFIG_FILE							"/etc/pilight/config.json"
#define LOG_FILE								"/var/log/pilight.log"
#define TZDATA_FILE							"/etc/pilight/tzdata.json"
#define LOG_MAX_SIZE 						1048576 // 1024*1024

#define SEND_REPEATS						10
#define RECEIVE_REPEATS					1
#define UUID_LENGTH							21

#ifdef FIRMWARE_UPDATER
	#define FIRMWARE_PATH				"/etc/pilight/"
#endif

typedef enum runmode_t {
	STANDALONE,
	ADHOC
} runmode_t;

typedef struct pilight_t {
    void (*broadcast)(char *name, JsonNode *message);
    int (*send)(JsonNode *json);
    int (*control)(struct devices_t *dev, char *state, JsonNode *values);
    void (*receive)(int *rawcode, int rawlen, int plslen, int hwtype);
    runmode_t runmode;
} pilight_t;

struct pilight_t pilight;
char pilight_uuid[UUID_LENGTH];

#endif
